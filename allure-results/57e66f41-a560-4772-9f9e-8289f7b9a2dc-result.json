{"name": "Verify the Auth API Positive flow", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "api_request_context = <playwright._impl._fetch.APIRequestContext object at 0x000001A1B584BD30>\ncase = {'endpoint': '/booking', 'expected_schema': {'$schema': 'http://json-schema.org/draft-04/schema#', 'properties': {'rea...required': ['reason'], 'type': 'object'}, 'expected_status': 200, 'headers': {'Content-Type': 'application/json'}, ...}\n\n    @allure.feature(\"Test Auth API\")\n    @allure.story(\"Test Auth API...\")\n    @allure.title(\"Verify the Auth API Positive flow\")\n    @allure.description(\"verify the get API response status code and data\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.Regression\n    @pytest.mark.Smoke\n    @pytest.mark.Positive\n    @pytest.mark.parametrize(\"case\", testcasedata[\"negative\"])\n    def test_create_authToken_negative(api_request_context,case):\n    \n        response = post_request(api_request_context, base_url =baseURL, api_endpoint=case[\"endpoint\"],payload=case[\"params\"],header=case[\"headers\"])\n>       validate_response_code(response, case[\"expected_status\"])\n\ntestcases\\test_1_auth.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <APIResponse url='https://restful-booker.herokuapp.com/booking' status=500 status_text='Internal Server Error'>, expected_response_code = 200\n\n    def validate_response_code(response, expected_response_code):\n        \"\"\"\n        Method to validate the response code\n        :param expected_response_code:\n        :param response:\n        :return:\n        \"\"\"\n        actual_status_code = get_response_code(response)\n>       assert actual_status_code == expected_response_code\nE       AssertionError\n\nAPI_Utilities\\api_validations.py:17: AssertionError"}, "description": "verify the get API response status code and data", "attachments": [{"name": "log", "source": "2cebedb6-737a-40fe-ac61-bd4befc3d7b4-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'endpoint': '/booking', 'method': 'POST', 'params': {'username': 'Dipankar', 'password': 'Dipankar'}, 'headers': {'Content-Type': 'application/json'}, 'expected_status': 200, 'expected_schema': {'$schema': 'http://json-schema.org/draft-04/schema#', 'type': 'object', 'properties': {'reason': {'type': 'string'}}, 'required': ['reason']}}"}], "start": 1720269909243, "stop": 1720269910157, "uuid": "60c0cf50-da91-4c4c-a0a8-e619d764ea6d", "historyId": "f05550b3ae422840bd4555a636a5fce9", "testCaseId": "935abbd0951fe3b5424e108f69f4657a", "fullName": "testcases.test_1_auth#test_create_authToken_negative", "labels": [{"name": "severity", "value": "blocker"}, {"name": "story", "value": "Test Auth API..."}, {"name": "feature", "value": "Test Auth API"}, {"name": "tag", "value": "Positive"}, {"name": "tag", "value": "Smoke"}, {"name": "tag", "value": "Regression"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_1_auth"}, {"name": "host", "value": "LAPTOP-3LS58R1Q"}, {"name": "thread", "value": "15352-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_1_auth"}]}